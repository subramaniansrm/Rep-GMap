<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%-- <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %> --%>
<%@ page contentType="text/html;charset=UTF-8" language="java" pageEncoding="UTF-8"%>
<%@taglib uri = "http://www.springframework.org/tags/form" prefix = "form"%>
<c:set var="contextPath" value="${pageContext.request.contextPath}"/>

<!DOCTYPE HTML>
<html lang="en">
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" >  
	 
	<!-- IE Edge Meta Tag -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<meta name="keywords" content="" />
	<meta name="description" content="" /> 
	<title>REGM</title>

  	<link rel="stylesheet" type="text/css" href="${contextPath}/resources/assets/css/bootstrap.css" />
	<link rel="stylesheet" type="text/css" href="${contextPath}/resources/assets/css/bootstrap-datetimepicker.min.css" />
	<link rel="stylesheet" type="text/css" href="${contextPath}/resources/assets/css/jquery.mCustomScrollbar.min.css" />
	<link rel="stylesheet" type="text/css" href="${contextPath}/resources/assets/css/style.css" />  

	<!-- Font Awesome v5.0.13 JS -->
    <script src="${contextPath}/resources/assets/font/solid.js" ></script>
	<script src="${contextPath}/resources/assets/font/fontawesome.js" ></script>
 
      <script src="https://code.jquery.com/jquery-1.12.3.min.js"></script>

	 <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
     <style type="text/css">

      #map_canvas {
            height: 1000px;
   		 	margin: 30px;
    		width: 1000px;
       }   
       .label {
           color: #000;
           background-color: white;
           border: 1px solid #000;
           font-family: "Lucida Grande", "Arial", sans-serif;
           font-size: 12px;
           text-align: center;
           white-space: nowrap;
           padding: 2px;
       }
       .label.green {
           background-color: #58D400;
       }
       .label.red {
           background-color: #D80027;
           color: #fff;
       }
       .label.yellow {
           background-color: #FCCA00;
       }
       .label.turquoise {
           background-color: #00D9D2;
       }
       .label.brown {
           background-color: #BF5300;
           color: #fff;
       }
    
     #loader { 
            border: 12px solid #f3f3f3; 
            border-radius: 50%; 
            border-top: 12px solid #444444; 
            width: 70px; 
            height: 70px; 
            animation: spin 1s linear infinite; 
        } 
          
        @keyframes spin { 
            100% { 
                transform: rotate(360deg); 
            } 
        } 
          
        .center { 
            position: absolute; 
            top: 0; 
            bottom: 0; 
            left: 0; 
            right: 0; 
            margin: auto; 
        } 
    
       .lable {
         	display: inline-block;
    		width: 100px;
    		font-weight: bold;    
		}
		.lablerow{
			display:block;
			padding:3px 0;
			color: #055173;
		}
		.lablerow:nth-child(odd){
    		background: #e9f2f154;
		}
		.navbut{
			background: #f05805;
    		color: #f4f3f3;
    		border: 0;
    		padding: 5px 20px;
    		border-radius: 7px;
    		display: inline-block;
    		margin-right: 30px;	
		}

  </style>

       <script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false"></script>  
       <script type="text/javascript">   

function initialize(){                       
       
     var markers = [
                     <c:forEach var="s" items="${fileParams}">                                               
                               		  <c:forEach var="list" items="${s.listDetails}" varStatus="index">                                   		
                                      ['<c:out value="${s.colorCode}"/>', <c:out value="${list.latitude}"/>,<c:out value="${list.longitude}"/>,
                                       '<c:out value="${list.propertyName}"/>', '<c:out value="${list.landArea}"/>', '<c:out value="${list.occuipedArea}"/>',
                                       '<c:out value="${list.unitPrice}"/>', '<c:out value="${list.address}"/>' , '<c:out value="${list.station}"/>', 
                                       '<c:out value="${list.traffic}"/>','<c:out value="${list.floorPlan}"/>','<c:out value="${list.fileName1}"/>','<c:out value="${list.fileName2}"/>',
                                       <c:out value="${s.latitude}"/>,<c:out value="${s.longtitude}"/> ],
                                       </c:forEach>   </c:forEach> ]; 
    
                                                                                                               
    var bp = {lat: 36.204824, lng: 138.252924};           
    var mapOptions={
        zoom: 6, 
        center: bp,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        gestureHandling: "cooperative",
    }

    var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
    var icons = {
    	     'Green': {
    	      url: "https://maps.google.com/mapfiles/ms/icons/green.png",
    	       //url: "${contextPath}/resources/images/一棟.png",
    	       color: '#58D400'
    	     },
    	     'Yellow': {
    	       url:"https://maps.google.com/mapfiles/ms/icons/yellow.png",
    	     //url: "${contextPath}/resources/images/一棟.png",
    	       color: '#FCCA00'
    	     },
    	     'Red': {
    	       url: "https://maps.google.com/mapfiles/ms/icons/red.png",
    	     //url: "${contextPath}/resources/images/一棟.png",
    	       color: '#D80027'
    	     },
    	     'Gray': {
    	       url: "https://maps.google.com/mapfiles/ms/icons/grey.png",
    	     //url: "${contextPath}/resources/images/一棟.png",
    	       color: '#00D9D2'
    	     },
    	     'Blue': {
    	       url: "https://maps.google.com/mapfiles/ms/icons/blue.png",
    	     //url: "${contextPath}/resources/images/一棟.png",
    	       color: '#BF5300'
    	     },
    	         	    
    	    'DarkGreen': {
      	       url: "https://maps.google.com/mapfiles/ms/icons/green.png",
      	   //url: "${contextPath}/resources/images/一棟.png",
      	       color: '#58D400'
      	     },
      	     'DarkYellow': {
      	       url: "https://maps.google.com/mapfiles/ms/icons/yellow.png",
      	   //url: "${contextPath}/resources/images/一棟.png",
      	       color: '#FCCA00'
      	     },
      	     'DarkRed': {
      	       url: "https://maps.google.com/mapfiles/ms/icons/red.png",
      	   //url: "${contextPath}/resources/images/一棟.png",
      	       color: '#D80027'
      	     },
      	     'Black': {
      	       url: "https://maps.google.com/mapfiles/ms/icons/grey.png",
      	   //url: "${contextPath}/resources/images/一棟.png",
      	       color: '#00D9D2'
      	     },
      	     'DarkBlue': {
      	       url: "https://maps.google.com/mapfiles/ms/icons/blue.png",
      	   //url: "${contextPath}/resources/images/一棟.png",
      	       color: '#BF5300'
      	     }    	         	         	        	         	         	     
    	   };
    
    var infowindow = new google.maps.InfoWindow(), marker, i;
    var bounds = new google.maps.LatLngBounds();      
    for (i = 0; i < markers.length; i++) {      	  
       marker = new google.maps.Marker({              
            position: new google.maps.LatLng(markers[i][1], markers[i][2]),
            map: map,
            icon: icons[ markers[i][0]].url,       
            labelClass: "label " +  markers[i][0],
            labelInBackground: true  
          });               
       
       bounds.extend(marker.getPosition());
       
        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {                                                	        
            
                	        var content =            		 
                     	       "<div>" +"<div class='lablerow'><div class='lable'> " + "物件名 " +"  </div><b>: </b>"  +  markers[i][3] +  "</div>"+ 
                     	        "<div class='lablerow'><div class='lable'>  " + "面積 " +" </div><b>: </b>" + markers[i][4]+  "</div>" +   
                     	        "<div class='lablerow'><div class='lable'>  " + "占面積" +" </div><b>: </b>" + markers[i][5] +  "</div>" + 
                     	        "<div class='lablerow'><div class='lable'>  " + "単価【坪】 " +" </div><b>: </b>" + markers[i][6] +  "</div>" + 
                     	        "<div class='lablerow'><div class='lable'>  " + "住所 " +"</div><b>: </b>" +  markers[i][7] +  "</div>" + 
                     	        "<div class='lablerow'><div class='lable'>  " + "沿線駅 " +" </div><b>: </b>" + markers[i][8] +  "</div>" + 
                     	        "<div class='lablerow'><div class='lable'> " + "交通 " +" </div><b>: </b>" + markers[i][9] +  "</div>" + 
                     	        "<div class='lablerow'><div class='lable'>  " + "間取り " +" </div><b>: </b>" + markers[i][10] +  "</div>" + 
                     	        "<button onclick='pdfdownload1()' id='b1' class='navbut' value='"+markers[i][11]+"' >図面</button>" +  "        " +               	          
                     	        "<button onclick='pdfdownload2()' id='b2' class='navbut'  value='"+markers[i][12]+"' >詳細</button>" + "<div>" ;     
                	        
                infowindow.setContent(content);   
                infowindow.open(map, marker);
            }
        })(marker, i));
        map.fitBounds(bounds);
    }
}
  google.maps.event.addDomListener(window, 'load', initialize);
    
  function pdfdownload1(){
	   
	   var filename = document.getElementById("b1").value; 		       	 
		
	    $.ajax({
            cache: false,
            type: "GET",
            url: "${pageContext.request.contextPath}/download/"+filename,
            contentType : false,
            processData: false,
            data: filename,
             //xhrFields is what did the trick to read the blob to pdf
            xhrFields: {
                responseType: 'blob'
            },
            success: function (response, status, xhr) {                         
                var filename = "";                   
                var disposition = xhr.getResponseHeader('Content-Disposition');                
                                
                 if (disposition) {
                    var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                    var matches = filenameRegex.exec(disposition);
                    if (matches !== null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                }    
                var linkelem = document.createElement('a');
                try {
                    var blob = new Blob([response], { type: 'application/octet-stream' });                        

                    if (typeof window.navigator.msSaveBlob !== 'undefined') {
                        //   IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
                        window.navigator.msSaveBlob(blob, filename);
                         
                    } else {
                        var URL = window.URL || window.webkitURL;
                        var downloadUrl = URL.createObjectURL(blob);

                        if (filename) { 
                        	                        	 
                            // use HTML5 a[download] attribute to specify filename
                            var a = document.createElement("a");

                            // safari doesn't support this yet
                            if (typeof a.download === 'undefined') {
                                window.location = downloadUrl;
                            } else {
                                a.href = downloadUrl;
                                a.download = filename;
                                document.body.appendChild(a);
                                a.target = "_blank";
                                a.click();
                            }
                        } else {
                            window.location = downloadUrl;
                        }
                    }   

                } catch (ex) {
                    console.log(ex);
                } 
            }
        });  		
  }    
    
  function pdfdownload2(){
	   
	   var filename = document.getElementById("b2").value; 		       	 
		
	    $.ajax({
            cache: false,
            type: "GET",
            url: "${pageContext.request.contextPath}/download/"+filename,
            contentType : false,
            processData: false,
            data: filename,
             //xhrFields is what did the trick to read the blob to pdf
            xhrFields: {
                responseType: 'blob'
            },
            success: function (response, status, xhr) {                         
                var filename = "";                   
                var disposition = xhr.getResponseHeader('Content-Disposition');                
                                
                 if (disposition) {
                    var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                    var matches = filenameRegex.exec(disposition);
                    if (matches !== null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                }    
                var linkelem = document.createElement('a');
                try {
                    var blob = new Blob([response], { type: 'application/octet-stream' });                        

                    if (typeof window.navigator.msSaveBlob !== 'undefined') {
                        //   IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
                        window.navigator.msSaveBlob(blob, filename);
                         
                    } else {
                        var URL = window.URL || window.webkitURL;
                        var downloadUrl = URL.createObjectURL(blob);

                        if (filename) { 
                        	                        	 
                            // use HTML5 a[download] attribute to specify filename
                            var a = document.createElement("a");

                            // safari doesn't support this yet
                            if (typeof a.download === 'undefined') {
                                window.location = downloadUrl;
                            } else {
                                a.href = downloadUrl;
                                a.download = filename;
                                document.body.appendChild(a);
                                a.target = "_blank";
                                a.click();
                            }
                        } else {
                            window.location = downloadUrl;
                        }
                    }   

                } catch (ex) {
                    console.log(ex);
                } 
            }
        });  		
  }  
       
    document.onreadystatechange = function() { 
       if (document.readyState !== "complete") { 
           document.querySelector( 
             "body").style.visibility = "hidden"; 
           document.querySelector( 
             "#loader").style.visibility = "visible"; 
       } else { 
           document.querySelector( 
             "#loader").style.display = "none"; 
           document.querySelector( 
             "body").style.visibility = "visible"; 
       } 
   };   
    
   </script>	
</head>


<body onload="initialize()">
    <div id="loader" class="center"></div>     
   <!--  <img src="C:/Users/priyas/Downloads/loading.svg"
         alt="logo" />  --></div>

<!-- ========================= SECTION CONTENT ========================= -->


<div class="wrapper">
	<!-- Sidebar  -->
	<nav id="sidebar">
		<div class="sidebar-header">
			<a class="sdf" href="#">
				<img src="${contextPath}/resources/assets/images/logo.png" class="img-fluid">
			</a>
		</div>

		<ul class="list-unstyled components">
			<li class="active">
				<a href="#">User</a>
			</li>
			<li>
			<!-- 	<a href="#">Upload</a> -->
			<a href="/uploadAdd">Upload</a>
			</li>
			<li>
				<!-- <a href="#">GeoMap</a> -->
				<a href="/readAddress">GeoMap</a>
			</li>
		</ul>
	</nav>

	<!-- Page Content  -->
	<div id="content">

		<nav class="navbar navbar-expand-lg navbar-light bg-light sticky-top navbar_sticky_sec">
			<div class="container-fluid px-0">
				<button type="button" id="sidebarCollapse" class="btn btn-info">
					<i class="fas fa-align-left"></i>
					<!-- <span>Toggle Sidebar</span> -->
				</button>
				<!-- <button class="btn btn-dark d-inline-block d-lg-none ml-auto" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
					<i class="fas fa-align-justify"></i>
				</button> -->
				<button class="navbar-toggler navbar-toggler-right collapsed" type="button" data-toggle="collapse" data-target="#navbarSupportedContent">
					<span> </span>
					<span> </span>
					<span> </span>
				</button>
				 
				<div class="collapse navbar-collapse" id="navbarSupportedContent">
					<ul class="nav navbar-nav ml-auto">
						<li class="nav-item active">
							<a class="nav-link" href="#">Page</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#">Page</a>
						</li>
					</ul>
				</div>
			</div>
		</nav>


		<div class="container-fluid py-3 containerFluid_height">
			<div class="row">
				<div class="col-lg-6 col-md-6 col-sm-8 col-8 offset-lg-3 offset-md-3 offset-sm-2 offset-2">
					
					  <form:form method = "POST" action = "${pageContext.request.contextPath}/address/readAddress">
					<div class="row">
						<div class="col-lg-7 col-md-7 col-sm-6 col-12">
							<div class="form-group datePicker_secCCC">
								<div class="input-group date" id="datetimepicker1">
								 
								   <input type="text" name = "dateVal" placeholder="" class="form-control" required/>  
								 	<div class="input-group-addon input-group-append">
										<div class="input-group-text">
											<i  class="glyphicon glyphicon-calendar fa fa-calendar"></i>
										</div>
									</div>  																	 									
								</div>
							</div>
						</div>
						<div class="col-lg-5 col-md-5 col-sm-6 col-12">
							<button type="submit" class="btn customBtn_2 align-middle">
								<span>地図を表示する</span>
							</button>
						</div>
					</div>
					
					  </form:form>
					  
				</div>
			</div>

			<div class="row">
			   <div class="col-md-12"  >    
					GeoMap Section					     				
			  </div>   
			</div>
				<div class="row">			      				
				  <%-- <form:form method="POST" action = "${pageContext.request.contextPath}/download1" modelAttribute="fileParams"> --%>  
					 <div id="map_canvas"  ></div>
     
                     <p class="info">${ message }</p>         			
     			<%--   </form:form>   --%>
			    
			</div>
		</div>
		
		<footer class="footer mt-auto footer_sec">
			<div class="container-fluid p-0">
				  <div class="text-center py-2 footer_copyright">
					<p>&copy Copyright 2020.</p>
				</div>	
			</div>
		</footer>

	</div>
</div>


<!-- For page to top start -->
<a id="back-to-top" href="#" class="btn back-to-top" role="button"><span class="fa fa-arrow-up"></span></a>
<!-- For page to top end -->




<!-- jQuery -->
<!-- <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script> -->
<script src="${contextPath}/resources/assets/js/jquery.min.js" type="text/javascript"></script>


<!-- Bootstrap files (jQuery first, then Popper.js, then Bootstrap JS) -->
<script src="${contextPath}/resources/assets/js/bootstrap.min.js" type="text/javascript"></script>
<script src="${contextPath}/resources/assets/js/moment-with-locales.min.js" type="text/javascript"></script>
<script src="${contextPath}/resources/assets/js/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
<script src="${contextPath}/resources/assets/js/jquery.mCustomScrollbar.concat.min.js" type="text/javascript"></script>
<script src="${contextPath}/resources/assets/js/custom.js" type="text/javascript"></script>

<!-- <script type="text/javascript">
	$(document).ready(function(){
	});
</script> -->

</body>
</html>
 